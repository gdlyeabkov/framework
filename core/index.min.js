/*
    hooks
*/
const mountedHook = () => {
    let fastOptions = {
        box: {
            s: '2'
        }
    }
    let fastInst = new Fast(fastOptions)
}

const destroyHook = () => {
    alert('destroyHook')
}

/*
    classes
*/

class Fast {
    
    box = {}
    
    constructor (options) {
        console.log(`создаю Fast с настройками: ${options}`)
        let optionsKeys = Object.keys(options)
        let optionsValues = Object.values(options)
        optionsKeys.map((option, optionIndex) => {
            console.log(`Настройка: ${option}`)
            if (option === 'box') {
                let customBox = optionsValues[optionIndex]
                if (typeof customBox === 'object') {
                    console.log(`Коробка - это объект значит все впорядке`)
                    this.box = customBox
                } else {
                    console.log(`Коробка должна быть объектом с данными: ${typeof optionsValues[optionIndex]}`)
                }
            }
        })
    }

    openBox () {
        return this.box
    }

}

window.onload = () => mountedHook()
window.onclose = () => destroyHook()